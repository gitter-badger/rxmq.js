{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "Rx",
            "range": [
              7,
              9
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 9
              }
            }
          },
          "range": [
            7,
            9
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 9
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "rx",
        "raw": "'rx'",
        "range": [
          15,
          19
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 15
          },
          "end": {
            "line": 1,
            "column": 19
          }
        }
      },
      "range": [
        0,
        20
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 20
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * EndlessSubject extension of Rx.Subject.\n * This is pretty hacky, but so far I'd found no better way of having\n * Subjects that do no close on multicasted stream completion.\n * For documentation refer to\n * [Rx.Subject docs](@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md).\n * The only difference is that EndlessSubject never triggers '.onCompleted()'\n ",
          "range": [
            22,
            426
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "Identifier",
      "id": {
        "type": "Identifier",
        "name": "EndlessSubject",
        "range": [
          433,
          447
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 6
          },
          "end": {
            "line": 11,
            "column": 20
          }
        }
      },
      "superClass": {
        "type": "MemberExpression",
        "computed": false,
        "object": {
          "type": "Identifier",
          "name": "Rx",
          "range": [
            456,
            458
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 29
            },
            "end": {
              "line": 11,
              "column": 31
            }
          }
        },
        "property": {
          "type": "Identifier",
          "name": "Subject",
          "range": [
            459,
            466
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 32
            },
            "end": {
              "line": 11,
              "column": 39
            }
          }
        },
        "range": [
          456,
          466
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 29
          },
          "end": {
            "line": 11,
            "column": 39
          }
        }
      },
      "body": {
        "type": "ClassBody",
        "body": [
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "onCompleted",
              "range": [
                590,
                601
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 4
                },
                "end": {
                  "line": 16,
                  "column": 15
                }
              }
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "body": [],
                "range": [
                  604,
                  606
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 18
                  },
                  "end": {
                    "line": 16,
                    "column": 20
                  }
                }
              },
              "generator": false,
              "expression": false,
              "range": [
                601,
                606
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 15
                },
                "end": {
                  "line": 16,
                  "column": 20
                }
              }
            },
            "kind": "method",
            "computed": false,
            "range": [
              590,
              606
            ],
            "loc": {
              "start": {
                "line": 16,
                "column": 4
              },
              "end": {
                "line": 16,
                "column": 20
              }
            },
            "leadingComments": [
              {
                "type": "Block",
                "value": "*\n     * Dummy method override to prevent execution and Rx.Observable completion\n     * @return {void}\n     ",
                "range": [
                  473,
                  585
                ],
                "loc": {
                  "start": {
                    "line": 12,
                    "column": 4
                  },
                  "end": {
                    "line": 15,
                    "column": 7
                  }
                }
              }
            ],
            "static": false
          }
        ],
        "range": [
          467,
          608
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 40
          },
          "end": {
            "line": 17,
            "column": 1
          }
        }
      },
      "range": [
        427,
        608
      ],
      "loc": {
        "start": {
          "line": 11,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * EndlessSubject extension of Rx.Subject.\n * This is pretty hacky, but so far I'd found no better way of having\n * Subjects that do no close on multicasted stream completion.\n * For documentation refer to\n * [Rx.Subject docs](@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md).\n * The only difference is that EndlessSubject never triggers '.onCompleted()'\n ",
          "range": [
            22,
            426
          ],
          "loc": {
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": null,
      "specifiers": [
        {
          "type": "ExportSpecifier",
          "exported": {
            "type": "Identifier",
            "name": "EndlessSubject",
            "range": [
              618,
              632
            ],
            "loc": {
              "start": {
                "line": 19,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 22
              }
            }
          },
          "local": {
            "type": "Identifier",
            "name": "EndlessSubject",
            "range": [
              618,
              632
            ],
            "loc": {
              "start": {
                "line": 19,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 22
              }
            }
          },
          "range": [
            618,
            632
          ],
          "loc": {
            "start": {
              "line": 19,
              "column": 8
            },
            "end": {
              "line": 19,
              "column": 22
            }
          }
        }
      ],
      "source": null,
      "range": [
        610,
        634
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 24
        }
      }
    },
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "EndlessSubject",
          "range": [
            433,
            447
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 6
            },
            "end": {
              "line": 11,
              "column": 20
            }
          }
        },
        "superClass": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "Rx",
            "range": [
              456,
              458
            ],
            "loc": {
              "start": {
                "line": 11,
                "column": 29
              },
              "end": {
                "line": 11,
                "column": 31
              }
            }
          },
          "property": {
            "type": "Identifier",
            "name": "Subject",
            "range": [
              459,
              466
            ],
            "loc": {
              "start": {
                "line": 11,
                "column": 32
              },
              "end": {
                "line": 11,
                "column": 39
              }
            }
          },
          "range": [
            456,
            466
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 29
            },
            "end": {
              "line": 11,
              "column": 39
            }
          }
        },
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "MethodDefinition",
              "key": {
                "type": "Identifier",
                "name": "onCompleted",
                "range": [
                  590,
                  601
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 4
                  },
                  "end": {
                    "line": 16,
                    "column": 15
                  }
                }
              },
              "value": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [],
                  "range": [
                    604,
                    606
                  ],
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 18
                    },
                    "end": {
                      "line": 16,
                      "column": 20
                    }
                  }
                },
                "generator": false,
                "expression": false,
                "range": [
                  601,
                  606
                ],
                "loc": {
                  "start": {
                    "line": 16,
                    "column": 15
                  },
                  "end": {
                    "line": 16,
                    "column": 20
                  }
                }
              },
              "kind": "method",
              "computed": false,
              "range": [
                590,
                606
              ],
              "loc": {
                "start": {
                  "line": 16,
                  "column": 4
                },
                "end": {
                  "line": 16,
                  "column": 20
                }
              },
              "leadingComments": [
                {
                  "type": "Block",
                  "value": "*\n     * Dummy method override to prevent execution and Rx.Observable completion\n     * @return {void}\n     ",
                  "range": [
                    473,
                    585
                  ],
                  "loc": {
                    "start": {
                      "line": 12,
                      "column": 4
                    },
                    "end": {
                      "line": 15,
                      "column": 7
                    }
                  }
                }
              ],
              "static": false
            }
          ],
          "range": [
            467,
            608
          ],
          "loc": {
            "start": {
              "line": 11,
              "column": 40
            },
            "end": {
              "line": 17,
              "column": 1
            }
          }
        },
        "range": [
          427,
          608
        ],
        "loc": {
          "start": {
            "line": 11,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * EndlessSubject extension of Rx.Subject.\n * This is pretty hacky, but so far I'd found no better way of having\n * Subjects that do no close on multicasted stream completion.\n * For documentation refer to\n * [Rx.Subject docs](@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md).\n * The only difference is that EndlessSubject never triggers '.onCompleted()'\n ",
            "range": [
              22,
              426
            ],
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 10,
                "column": 3
              }
            }
          }
        ],
        "__esdoc__pseudo_export": false,
        "trailingComments": []
      },
      "specifiers": null,
      "source": null,
      "range": [
        610,
        634
      ],
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 19,
          "column": 24
        }
      },
      "leadingComments": null
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    634
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 19,
      "column": 24
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * EndlessSubject extension of Rx.Subject.\n * This is pretty hacky, but so far I'd found no better way of having\n * Subjects that do no close on multicasted stream completion.\n * For documentation refer to\n * [Rx.Subject docs](@link https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/subjects/subject.md).\n * The only difference is that EndlessSubject never triggers '.onCompleted()'\n ",
      "range": [
        22,
        426
      ],
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n     * Dummy method override to prevent execution and Rx.Observable completion\n     * @return {void}\n     ",
      "range": [
        473,
        585
      ],
      "loc": {
        "start": {
          "line": 12,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 7
        }
      }
    }
  ]
}